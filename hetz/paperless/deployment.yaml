---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: paperless
  labels:
    app: paperless
  name: paperless
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: paperless
  template:
    metadata:
      labels:
        app: paperless
    spec:
      securityContext:
        fsGroup: 1000
      containers:
      - args:
        - /usr/local/bin/paperless_cmd.sh
        ports:
        - containerPort: 8000
          name: http
        resources:
          requests:
            memory: "768Mi"
            cpu: "1000m"
        livenessProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: 90
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: 90
          periodSeconds: 10
        env:
        - name: PAPERLESS_URL
          value: "https://docs.spacemule.net"
        - name: PAPERLESS_WEBSERVER_WORKERS
          value: "4"
        - name: PAPERLESS_CONSUMER_RECURSIVE
          value: "true"
        - name: PAPERLESS_REDIS
          value: redis://redis-master.databases.svc.cluster.local:6379/0
        - name: PAPERLESS_OCR_LANGUAGES
          value: heb
        - name: PAPERLESS_TIKA_ENABLED
          value: "true"
        - name: PAPERLESS_TIKA_GOTENBERG_ENDPOINT
          value: http://gotenberg-service:3000
        - name: PAPERLESS_CONSUMER_DELETE_DUPLICATES
          value: "true"
        - name: PAPERLESS_TIKA_ENDPOINT
          value: http://tika-service:9998
        - name: PAPERLESS_TIME_ZONE
          value: Asia/Jerusalem
        - name: PAPERLESS_DBHOST
          value: postgresql.databases.svc.cluster.local
        - name: PAPERLESS_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: paperless-secret
              key: paperless-key
              optional: false
        - name: PAPERLESS_DBPASS
          valueFrom:
            secretKeyRef:
              name: paperless-secret
              key: paperless-db-pass
              optional: false
        - name: PAPERLESS_TRASH_DIR
          value: /usr/src/paperless/trash
        image: ghcr.io/paperless-ngx/paperless-ngx:1.9.2
        name: paperless-ng
        volumeMounts:
        - name: paperless-mount
          mountPath: /usr/src/paperless/data
          subPath: data
        - name: paperless-mount
          mountPath: /usr/src/paperless/media
          subPath: media
        - name: consumption
          mountPath: /usr/src/paperless/consume
        - name: trash
          mountPath: /usr/src/paperless/trash
      restartPolicy: Always
      volumes:
      - name: paperless-mount
        persistentVolumeClaim:
          claimName: paperless-pvc
      - name: consumption
        emptyDir: {}
      - name: trash
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: paperless
  labels:
    app: tika
  name: tika
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tika
  template:
    metadata:
      labels:
        app: tika
    spec:
      containers:
        - image: docker.io/apache/tika:2.6.0.1
          resources:
            requests:
              memory: "128Mi"
              cpu: "300m"
          name: tika
          livenessProbe:
            httpGet:
              path: /
              port: tika
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: tika
            initialDelaySeconds: 30
            periodSeconds: 10
          ports:
            - containerPort: 9998
              name: tika
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: paperless
  labels:
    app: gotenberg
  name: gotenberg
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gotenberg
  template:
    metadata:
      labels:
        app: gotenberg
    spec:
      containers:
        - args:
            - gotenberg
          env:
            - name: DISABLE_GOOGLE_CHROME
              value: "1"
          image: docker.io/thecodingmachine/gotenberg:6
          ports:
            - containerPort: 3000
              name: gotenberg
          name: gotenberg
          livenessProbe:
            tcpSocket:
              port: gotenberg
            initialDelaySeconds: 60
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: gotenberg
            initialDelaySeconds: 60
            periodSeconds: 10
          resources:
            requests:
              memory: "512Mi"
              cpu: "300m"